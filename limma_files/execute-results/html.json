{
  "hash": "58ad74f85cca86523a76353a2a067377",
  "result": {
    "markdown": "---\ntitle: \"Running Differential Testing using the Limma Package on Non RNA-seq Data\"\nauthor: \"Mick Lee\"\n---\n\n\nThis page is to document an example of running mass-spectrometry (Non RNA-seq data) using the LIMMA R package. For more information, please refer to the user guide: https://bioconductor.org/packages/devel/bioc/vignettes/limma/inst/doc/usersguide.pdf\n\n## **Getting Started:**\nBelow is an example run for two sample analysis (Three biological replicates)\n\n::: {.cell}\n\n```{.r .cell-code}\n###Install packages###\nrequire(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n```{.r .cell-code}\nrequire(gplots)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: gplots\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'gplots'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    lowess\n```\n:::\n\n```{.r .cell-code}\nrequire(RColorBrewer)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: RColorBrewer\n```\n:::\n\n```{.r .cell-code}\nrequire(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: scales\n```\n:::\n\n```{.r .cell-code}\nrequire(limma)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: limma\n```\n:::\n\n```{.r .cell-code}\nrequire(qvalue)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: qvalue\n```\n:::\n\n```{.r .cell-code}\nrm(list = ls())\n\n###Set Directory###\nsetwd(\"C:/Users/Mick Lee/Desktop/smart_nus\")\n\n##set metadata##\nfilelist <- data.frame(\n  sample = c(\"D37_CN1\", \"D37_CN2\", \"D37_CN3\", \"NASH1\", \"NASH2\", \"NASH3\"),\n  group = c(\"D37\", \"D37\", \"D37\", \"NASH\", \"NASH\", \"NASH\"),\n  colour = c(\"blue\", \"blue\", \"blue\", \"red\", \"red\", \"red\")\n)\nprint(filelist)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   sample group colour\n1 D37_CN1   D37   blue\n2 D37_CN2   D37   blue\n3 D37_CN3   D37   blue\n4   NASH1  NASH    red\n5   NASH2  NASH    red\n6   NASH3  NASH    red\n```\n:::\n\n```{.r .cell-code}\n##Example of the Mass-spec data (Relative AUC from Peaks measured)##\nms<-read.table(\"nash_ms.txt\", header=TRUE)\nhead(ms)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           D37_CN1  D37_CN2  D37_CN3    NASH1    NASH2    NASH3\nD          1221.72   924.08   782.72   362.94   513.60   636.60\nY          1790.96  1687.30  1583.71  1218.79  1497.24  1497.12\nnm5U/hm5C     9.48     8.56     9.14     4.66     6.45     8.43\nncm5U       265.25   199.22   184.72    84.13   123.59   151.59\nm3C/m4C   29431.54 22435.62 18914.20 10138.84 13191.44 17020.13\nacp3U      1130.82   857.09   756.30   314.65   437.89   581.46\n```\n:::\n:::\n\n## **Perform transformation and normalization**\nPerform Log normalization with small offset, 4.08 is used because at 10% quantile - valued at 4.08\n\n::: {.cell}\n\n```{.r .cell-code}\n#log normalization\nms<-log2(ms+4.08)\n#FOR NASH group\n###At 10% quantile 4.08 stabilizes the variance ###\nquantile(ms[ms>0], 0.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     10% \n4.393376 \n```\n:::\n:::\n\n## **Define groups and Design matrix + Differential Testing**\nDefine groups (in this case D37 vs NASH), design matrix, and fit contrasts between two groups for differential testing between two groups & fitting linear regression using limma\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the sample groups\ngroup <- factor(c(rep(\"D37\", 3), rep(\"NASH\", 3)))\n\n# Create the design matrix\ndesign <- model.matrix(~0 + group)\n\n# Define contrasts (comparing NASH with D37)\ncontrast.matrix <- makeContrasts(\n  NASHvsD37 = groupNASH - groupD37,\n  levels = design\n)\n\n# Perform differential expression analysis using limma\nfit <- lmFit(ms, design)\nfit <- contrasts.fit(fit, contrast.matrix)\nfit <- eBayes(fit)\nfit2<- eBayes(fit, trend=TRUE)\n\nplotSA(fit2)\n```\n\n::: {.cell-output-display}\n![](limma_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.callout-note}\nThe above variance plot which show stabilization of the variances nicely as seen from the horizontal trendline from plotSA()\n:::\n\n## **Extract, summarize the results and bind data**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract and summarize the results\nresult<-topTable(fit, coef = \"NASHvsD37\", number = nrow(ms))\n\n#merge result with ms\n\nNASHvsD37<-cbind(ms,result)\nNASHvsD37$sig=NASHvsD37$adj.P.Val<0.05 & abs(NASHvsD37$logFC)>=0.5\nhead(NASHvsD37)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            D37_CN1   D37_CN2   D37_CN3     NASH1     NASH2     NASH3\nD         10.259508  9.858230  9.619853  8.519715  9.015917  9.323460\nY         10.809800 10.723985 10.632804 10.256055 10.552016 10.551900\nnm5U/hm5C  3.761285  3.659925  3.724650  3.127633  3.396434  3.645010\nncm5U      8.073231  7.667466  7.560715  6.462870  6.996276  7.282347\nm3C/m4C   14.845275 14.453766 14.207493 13.308185 13.687761 14.055300\nacp3U     10.148349  9.750154  9.570577  8.316191  8.787805  9.193624\n               logFC   AveExpr         t      P.Value  adj.P.Val           B\nD         -0.8571348  5.872273 -6.219797 0.0009232637 0.03400817 -0.09443835\nY         -0.8874173  3.353315 -5.268807 0.0021218989 0.03400817 -0.95596946\nnm5U/hm5C -0.7374510  3.314144 -4.575174 0.0041749465 0.03400817 -1.66722135\nncm5U     -0.4247840  9.076081 -4.505190 0.0044862720 0.03400817 -1.74316386\nm3C/m4C   -1.0571536  9.294450 -4.005725 0.0076521263 0.03400817 -2.30814772\nacp3U     -0.5207529 12.134060 -3.881895 0.0087858773 0.03400817 -2.45449499\n            sig\nD          TRUE\nY          TRUE\nnm5U/hm5C  TRUE\nncm5U     FALSE\nm3C/m4C    TRUE\nacp3U      TRUE\n```\n:::\n:::\n\n\n::: {.callout-note}\nThe logFC column is the slope of the regression line, and the AveExpr column is the average of the values for the protein row (same as rowMeans()). AveExpr can also be the y-intercept of the regression line when the predictor is mean-centered. The actual y-intercept is  \n**AveExpr−avg(AGE)⋅logFC**\n . The other columns are\n        **t** moderated t-statistic\n        **P.Value** p-value\n        **adj.P.Val** p-values adjusted with the Benjamini-Hocheberg procedure\n        **B** log-odds of differential expression\n:::\n\n## **Plot PCA**\nplot PCA of samples to show unsupervised clustering based on sample data\n\n::: {.cell}\n\n```{.r .cell-code}\n###Z-scale data###\n\nms2 = (ms-rowMeans(ms))/apply(ms,1,sd)\n\npca = prcomp(t(ms2),scale=TRUE,center=TRUE)\neigs <- pca$sdev^2\npercentage_explained = eigs/sum(eigs)*100\npercentage_explained\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8.479417e+01 7.243287e+00 3.892483e+00 2.987105e+00 1.082954e+00\n[6] 3.207613e-31\n```\n:::\n\n```{.r .cell-code}\npcadata = as.data.frame(pca$x)\npcadata$group <- c(\"D37\", \"D37\", \"D37\", \"NASH\", \"NASH\", \"NASH\")\n\npcaxl = paste(\"PC1(\",format(round(percentage_explained[1],2),2),\"%)\",sep=\"\")\npcayl = paste(\"PC2(\",format(round(percentage_explained[2],2),2),\"%)\",sep=\"\")\n\nggplot(pcadata,aes(x=PC1,y=PC2, label=group))+geom_point(aes(color=group),shape=18,size=2)+theme_bw()+theme(panel.grid=element_blank())+xlab(pcaxl)+ylab(pcayl)+scale_color_manual(values=c(\"blue\",\"red\"))+geom_text(aes(label=rownames(pcadata)),hjust=0, vjust=0, size = 3)\n```\n\n::: {.cell-output-display}\n![](limma_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## **Plotting of Heatmap**\nExample plotting of heatmap to show relative expression levels using z-scaled transformed values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhc = hclust(as.dist(1-cor(ms2,method=\"spearman\")),method=\"ward.D2\")\nhr = hclust(as.dist(1-cor(t(ms2),method=\"pearson\")),method=\"ward.D2\")\npar(mar=c(7,4,4,2)+0.1) \nheatmap.2(as.matrix(ms2),Colv=as.dendrogram(hc),Rowv=as.dendrogram(hr),scale=\"none\",breaks=c(seq(-2,2,by=0.04)),col=colorRampPalette(c(\"blue\",\"white\",\"orange\"))(100),density.info=\"none\",trace=\"none\",ColSideColors=as.character(filelist$colour), cexCol = 1.5, srtCol=45, # Add vertical grid lines\n          )\n```\n\n::: {.cell-output-display}\n![](limma_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n## **Plotting of data using EnhancedVolcano plot**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(EnhancedVolcano)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: EnhancedVolcano\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggrepel\n```\n:::\n\n```{.r .cell-code}\nymax <- max(-log10(NASHvsD37[, \"adj.P.Val\",]), na.rm = TRUE)\n\nEnhancedVolcano(\n  NASHvsD37,\n  lab = rownames(NASHvsD37),\n  x = 'logFC',\n  y = 'adj.P.Val',\n  title = \"Significant RNA Epi-Modifications\",\n  subtitle = \"NASH vs D37 CMs\",\n  xlim = c(-2, 2),  # Example xlim, adjust as needed\n  ylim = c(0, ymax + 1.0),\n  FCcutoff = 0.5,      # Example FCcutoff, adjust as needed\n  pCutoff = 0.05,    # Example pCutoff, adjust as needed\n  legendLabels = c('NS', 'Log2 Fold-change', 'P value', 'P value & Log2 Fold-change'),\n  legendPosition = 'bottom',\n  legendLabSize = 10,\n  legendIconSize = 5.0\n)\n```\n\n::: {.cell-output-display}\n![](limma_files/figure-html/unnamed-chunk-7-1.png){width=384}\n:::\n:::\n\n::: {.callout-note}\nOne could create a new data frame for labels and use `geom_label_repel` to add \nan additional layer for labeling an example below:\n\nev+geom_label_repel(\n  data = labels_df,\n  aes(x = x, y = -log10(y), label = label),\n  color = \"black\",\n  fill = \"white\",\n  segment.color = \"black\",\n  segment.size = 0.5, # Adjust label position as needed\n)\n\nwhere ev is your aesthetics for ggplot/volcanoplot\n\n:::\n\n\nSession info as follows:\n```\nsessionInfo()\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 11 x64 (build 22621)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Singapore.utf8  LC_CTYPE=English_Singapore.utf8    LC_MONETARY=English_Singapore.utf8\n[4] LC_NUMERIC=C                       LC_TIME=English_Singapore.utf8    \n\ntime zone: Asia/Singapore\ntzcode source: internal\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] qvalue_2.32.0          stringr_1.5.0          reshape_0.8.9          scales_1.2.1          \n [5] goseq_1.52.0           geneLenDataBase_1.36.0 BiasedUrn_2.0.10       RColorBrewer_1.1-3    \n [9] VennDiagram_1.7.3      futile.logger_1.4.3    gplots_3.1.3           ggplot2_3.4.2         \n[13] edgeR_3.42.4           limma_3.56.2          \n\nloaded via a namespace (and not attached):\n [1] DBI_1.1.3                   bitops_1.0-7                formatR_1.14                biomaRt_2.56.1             \n [5] rlang_1.1.1                 magrittr_2.0.3              matrixStats_1.0.0           compiler_4.3.1             \n [9] RSQLite_2.3.1               mgcv_1.8-42                 GenomicFeatures_1.52.1      reshape2_1.4.4             \n[13] png_0.1-8                   vctrs_0.6.3                 pkgconfig_2.0.3             crayon_1.5.2               \n[17] fastmap_1.1.1               dbplyr_2.3.3                XVector_0.40.0              caTools_1.18.2             \n[21] utf8_1.2.3                  Rsamtools_2.16.0            bit_4.0.5                   zlibbioc_1.46.0            \n[25] cachem_1.0.8                GenomeInfoDb_1.36.1         progress_1.2.2              blob_1.2.4                 \n[29] DelayedArray_0.26.7         BiocParallel_1.34.2         parallel_4.3.1              prettyunits_1.1.1          \n[33] R6_2.5.1                    stringi_1.7.12              rtracklayer_1.60.0          GenomicRanges_1.52.0       \n[37] Rcpp_1.0.11                 SummarizedExperiment_1.30.2 IRanges_2.34.1              splines_4.3.1              \n[41] Matrix_1.6-0                tidyselect_1.2.0            rstudioapi_0.15.0           abind_1.4-5                \n[45] yaml_2.3.7                  codetools_0.2-19            curl_5.1.0                  plyr_1.8.8                 \n[49] lattice_0.21-8              tibble_3.2.1                Biobase_2.60.0              withr_2.5.0                \n[53] KEGGREST_1.40.0             lambda.r_1.2.4              BiocFileCache_2.8.0         xml2_1.3.5                 \n[57] Biostrings_2.68.1           pillar_1.9.0                filelock_1.0.2              MatrixGenerics_1.12.3      \n[61] KernSmooth_2.23-21          stats4_4.3.1                generics_0.1.3              RCurl_1.98-1.12            \n[65] S4Vectors_0.38.1            hms_1.1.3                   munsell_0.5.0               gtools_3.9.4               \n[69] glue_1.6.2                  tools_4.3.1                 BiocIO_1.10.0               locfit_1.5-9.8             \n[73] GenomicAlignments_1.36.0    XML_3.99-0.14               AnnotationDbi_1.62.2        colorspace_2.1-0           \n[77] nlme_3.1-162                GenomeInfoDbData_1.2.10     restfulr_0.0.15             cli_3.6.1                  \n[81] rappdirs_0.3.3              futile.options_1.0.1        fansi_1.0.4                 S4Arrays_1.0.5             \n[85] dplyr_1.1.2                 gtable_0.3.3                EnhancedVolcano_1.18.0      digest_0.6.33              \n[89] BiocGenerics_0.46.0         ggrepel_0.9.3               rjson_0.2.21                memoise_2.0.1              \n[93] lifecycle_1.0.3             httr_1.4.6                  GO.db_3.17.0                bit64_4.0.5\n``` ",
    "supporting": [
      "limma_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}